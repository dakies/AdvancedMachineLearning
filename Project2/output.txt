Sender: LSF System <lsfadmin@eu-g1-022-1>
Subject: Job 148602066: <python main.py> in cluster <euler> Done

Job <python main.py> was submitted from host <eu-login-43> by user <daniekie> in cluster <euler> at Thu Oct 22 13:47:37 2020
Job was executed on host(s) <40*eu-g1-022-1>, in queue <normal.4h>, as user <daniekie> in cluster <euler> at Thu Oct 22 13:47:46 2020
</cluster/home/daniekie> was used as the home directory.
</cluster/home/daniekie/Project2> was used as the working directory.
Started at Thu Oct 22 13:47:46 2020
Terminated at Thu Oct 22 14:13:36 2020
Results reported at Thu Oct 22 14:13:36 2020

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
python main.py
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   59685.00 sec.
    Max Memory :                                 10445 MB
    Average Memory :                             9080.02 MB
    Total Requested Memory :                     40960.00 MB
    Delta Memory :                               30515.00 MB
    Max Swap :                                   -
    Max Processes :                              44
    Max Threads :                                47
    Run time :                                   1577 sec.
    Turnaround time :                            1559 sec.

The output (if any) follows:

Performing grid search...
pipeline: ['remove const cloumns', 'outlier', 'sample', 'scale', 'selection', 'estimation']
parameters:
[{'estimation': [SVC(class_weight='balanced', decision_function_shape='ovo')],
  'estimation__C': [0.001, 0.01, 0.1, 10],
  'estimation__kernel': ['rbf'],
  'outlier': [FunctionSampler(func=<function isof at 0x2add26cad048>),
              FunctionSampler(func=<function lof at 0x2adcfd4a5e18>)],
  'sample': [RandomOverSampler(),
             RandomUnderSampler(),
             SMOTEENN(),
             SMOTETomek()],
  'selection__mode': ['fpr', 'fdr', 'fwe'],
  'selection__param': [0.0001, 0.001, 1]}]
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
Done in 1537.660s

Best balanced_accuracy score:  0.6930771001240348
Best parameters set: {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}

Grid scores on development set:

0.604 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.602 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.599 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.598 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.605 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.602 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.608 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.607 (+/-0.025) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.600 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.610 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.605 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.598 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.609 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.606 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.597 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.615 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.613 (+/-0.019) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.608 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.553 (+/-0.025) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.554 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.552 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.546 (+/-0.024) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.554 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.551 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.556 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.557 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.550 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}
0.589 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.589 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.588 (+/-0.019) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.592 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.591 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.591 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.591 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.593 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.590 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.594 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.598 (+/-0.019) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.592 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.599 (+/-0.026) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.593 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.589 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.602 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.601 (+/-0.027) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.596 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.342 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.334 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.333 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.552 (+/-0.010) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.554 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.551 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.553 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.551 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.550 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.553 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.553 (+/-0.009) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.549 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.001, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}
0.606 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.610 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.610 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.608 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.610 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.608 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.608 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.613 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.607 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.608 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.608 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.599 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.609 (+/-0.024) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.607 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.598 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.612 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.609 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.608 (+/-0.025) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.588 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.590 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.581 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.591 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.590 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.586 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.592 (+/-0.010) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.594 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.592 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.580 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.581 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.579 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.576 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.580 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.582 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.580 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.577 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.581 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}
0.601 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.600 (+/-0.019) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.598 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.599 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.602 (+/-0.014) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.600 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.600 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.602 (+/-0.019) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.602 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.591 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.596 (+/-0.031) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.593 (+/-0.010) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.595 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.592 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.591 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.602 (+/-0.030) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.598 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.597 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.586 (+/-0.003) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.586 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.584 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.586 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.585 (+/-0.002) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.580 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.589 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.586 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.583 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.578 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.575 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.575 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.577 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.578 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.577 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.576 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.578 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.576 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.01, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}
0.668 (+/-0.025) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.672 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.670 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.668 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.669 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.665 (+/-0.009) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.670 (+/-0.027) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.667 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.671 (+/-0.024) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.624 (+/-0.024) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.628 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.618 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.628 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.626 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.622 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.630 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.626 (+/-0.014) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.625 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.631 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.625 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.636 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.634 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.631 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.628 (+/-0.003) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.633 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.634 (+/-0.015) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.629 (+/-0.003) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.623 (+/-0.003) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.623 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.618 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.617 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.620 (+/-0.002) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.614 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.620 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.615 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.621 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}
0.647 (+/-0.025) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.648 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.641 (+/-0.036) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.643 (+/-0.022) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.646 (+/-0.028) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.645 (+/-0.035) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.646 (+/-0.030) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.645 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.643 (+/-0.043) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.615 (+/-0.025) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.608 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.604 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.608 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.607 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.606 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.610 (+/-0.021) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.615 (+/-0.029) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.611 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.612 (+/-0.009) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.614 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.609 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.613 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.610 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.609 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.611 (+/-0.002) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.616 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.615 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.599 (+/-0.010) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.607 (+/-0.009) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.601 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.606 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.602 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.606 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.607 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.606 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.603 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 0.1, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}
0.607 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.609 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.608 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.604 (+/-0.002) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.609 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.610 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.604 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.608 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.603 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.687 (+/-0.001) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.680 (+/-0.002) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.692 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.688 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.679 (+/-0.024) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.689 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.688 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.692 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.693 (+/-0.014) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.671 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.670 (+/-0.000) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.668 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.667 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.667 (+/-0.016) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.665 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.672 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.666 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.669 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.586 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.589 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.589 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.592 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.590 (+/-0.010) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.593 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.589 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.586 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.588 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function isof at 0x2add26cad048>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}
0.572 (+/-0.002) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.578 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.576 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.578 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.575 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.576 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.575 (+/-0.010) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.573 (+/-0.010) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.579 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomOverSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.663 (+/-0.029) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.659 (+/-0.028) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.659 (+/-0.034) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fpr', 'selection__param': 1}
0.667 (+/-0.023) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.665 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.669 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fdr', 'selection__param': 1}
0.664 (+/-0.025) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.662 (+/-0.009) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.652 (+/-0.031) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': RandomUnderSampler(), 'selection__mode': 'fwe', 'selection__param': 1}
0.638 (+/-0.005) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.638 (+/-0.013) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.638 (+/-0.020) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fpr', 'selection__param': 1}
0.640 (+/-0.018) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.643 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.639 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fdr', 'selection__param': 1}
0.640 (+/-0.004) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.639 (+/-0.017) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.642 (+/-0.003) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTEENN(), 'selection__mode': 'fwe', 'selection__param': 1}
0.551 (+/-0.007) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.0001}
0.553 (+/-0.008) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 0.001}
0.560 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fpr', 'selection__param': 1}
0.550 (+/-0.003) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.0001}
0.556 (+/-0.012) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 0.001}
0.558 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fdr', 'selection__param': 1}
0.555 (+/-0.006) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.0001}
0.556 (+/-0.014) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 0.001}
0.557 (+/-0.011) for {'estimation': SVC(C=10, class_weight='balanced', decision_function_shape='ovo'), 'estimation__C': 10, 'estimation__kernel': 'rbf', 'outlier': FunctionSampler(func=<function lof at 0x2adcfd4a5e18>), 'sample': SMOTETomek(), 'selection__mode': 'fwe', 'selection__param': 1}


Results saved as prediction.csv
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
/cluster/home/daniekie/.local/lib64/python3.6/site-packages/pandas/compat/__init__.py:85: UserWarning: Could not import the lzma module. Your installed Python is incomplete. Attempting to use lzma compression will result in a RuntimeError.
  warnings.warn(msg)
